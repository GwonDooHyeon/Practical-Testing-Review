/**
 * @see https://docs.spring.io/spring-restdocs/docs/current/reference/htmlsingle/
 */

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
    id "org.asciidoctor.jvm.convert" version "3.3.2" // 1. Asciidoctor Plugin 적용
}

group = 'sample'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    asciidoctorExt // 2. Asciidoctor를 확장하는 종속성에 대한 구성 선언
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // H2
    runtimeOnly 'com.h2database:h2'

    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // Spring REST Docs
    // 3. Asciidoctor 확장 종속성 추가
    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
    // 4. Spring REST Docs MockMvc 테스트 지원 종속성 추가
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

}

tasks.named('test') {
    useJUnitPlatform()
}

// 5. 생성된 스니펫의 출력 위치를 정의하는 속성 구성
ext {
    snippetsDir = file('build/generated-snippets')
}

// 6. 테스트 결과를 특정 디렉토리에 기록하기 위한 설정
test {
    outputs.dir snippetsDir // 작업을 실행하면 snippetsDir에(5번) 출력이 기록된다
}

// 7. Asciidoctor 플러그인을 사용하여 문서를 생성할 때 사용하는 설정 (Asciidoctor = AsciiDoc 형식의 문서를 HTML, PDF 등으로 변환해주는 도구)
asciidoctor {
    inputs.dir snippetsDir // snippetsDir 에 입력을 읽는다.
    configurations 'asciidoctorExt' // 앞서 설정한 확장 기능에 대한 종속성을 사용한다.

    sources {
        include("**/index.adoc") // 특정 파일만 html 로 만든다.
    }
    baseDirFollowsSourceFile() // 다른 adoc 파일을 include 할 때 경로를 baseDir 기준으로 설정한다.
    dependsOn test // 테스트가 수행 된 후 문서를 작성한다.
}

// 8. 정적 리소스로 문서를 포함시키기 위한 설정 (화면 제공)
bootJar {
    dependsOn asciidoctor // 문서가 생성된 후 jar 파일을 생성한다.
    from("${asciidoctor.outputDir}") { // 생성된 문서를 jar static/docs 디렉토리에 복사한다.
        into 'static/docs'
    }
}
